.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH RIGCTLD "8" "January 6, 2008" "Hamlib" "Rig Control Daemon"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
rigctld \- Hamlib rig control daemon
.SH SYNOPSIS
.B rigctld
[\fIOPTION\fR]...
.SH DESCRIPTION
The \fBrigctld\fP program is a \fBHamlib\fP rig daemon that handles TCP client 
requests. This allows multiple user programs to share one radio. Multiple radios
can be controlled on different TCP ports. The syntax of the commands are the
same as \fBrigctl\fP.
.PP
.\" TeX users may be more comfortable with the \fB<whatever>\fP and
.\" \fI<whatever>\fP escape sequences to invoke bold face and italics, 
.\" respectively.
Keep in mind that \fBHamlib\fP is BETA level software. 
While a lot of backend libraries lack complete rig support, the basic functions
are usually well supported.  The API may change without publicized notice, 
while an advancement of the minor version (e.g. 1.1.x to 1.2.x) indicates such
a change.
.PP
Please report bugs and provide feedback at the e-mail address given in the 
REPORTING BUGS section.  Patches and code enhancements are also welcome.
.SH OPTIONS
This program follows the usual GNU command line syntax, with long
options starting with two dashes (`-').

Here is a summary of the supported options:
.TP
.B \-m, --model=id
Select radio model number. See rig model list (use 'rigctl -l').
.TP
.B \-r, --rig-file=device
Use \fIdevice\fP as the file name of the port the radio is connected.
Often a serial port, but could be a USB to serial adapter.  Typically 
/dev/ttyS0, /dev/ttyS1, /dev/ttyUSB0, etc.
.TP
.B \-p, --ptt-file=device
Use \fIdevice\fP as the file name of the Push-To-Talk device using a
device file as described above.
.TP
.B \-d, --dcd-file=device
Use \fIdevice\fP as the file name of the Data Carrier Detect device using a
device file as described above.
.TP
.B \-p, --ptt-type=type
Use \fItype\fP of Push-To-Talk device.
Supported types are RIG, DTR, RTS, PARALLEL, NONE.
.TP
.B \-d, --dcd-type=type
Use \fItype\fP of Data Carrier Detect device. 
Supported types are RIG, DSR, CTS, CD, PARALLEL, NONE.
.TP
.B \-s, --serial-speed=baud
Set serial speed to \fIbaud\fP rate. Uses maximum serial speed from rig
backend capabilities as the default.
.TP
.B \-c, --civaddr=id
Use \fIid\fP as the CI-V address to communicate with the rig. Only useful for 
Icom rigs. 
.br
NB: the \fIid\fP is in decimal notation, unless prefixed by 
\fI0x\fP, in which case it is hexadecimal.
.TP
.B \-L, --show-conf
List all config parameters for the radio defined with -m above.
.TP
.B \-C, --set-conf=parm=val[,parm=val]*
Set config parameter.  e.g. stop_bits=2
.br
Use -L option for a list.
.TP
.B \-t, --port=number
Use \fInumber\fP as the TCP listening port. The default is 4532.
.TP
.B \-l, --list
List all model numbers defined in \fBHamlib\fP and exit.
.TP
.B \-u, --dump-caps
Dump capabilities for the radio defined with -m above and exit.
.TP
.B \-o, --vfo
Set vfo mode, requiring an extra VFO argument in front of each appropriate
command. Otherwise, VFO_CURR is assumed when this option is not set.
.TP
.B \-v, --verbose
Set verbose mode, cumulative (see DIAGNOSTICS below).
.TP
.B \-h, --help
Show a summary of these options and exit.
.TP
.B \-V, --version
Show the version of \fBrigctld\fP and exit.
.PP
Please note that the backend for the radio to be controlled, 
or the radio itself may not support some commands. In that case, 
the operation will fail with a \fBHamlib\fP error code.
.SH EXAMPLES
Start \fBrigctld\fP for a Yaesu FT-920 using an USB-to-serial adapter and
backgrounding:
.PP
$ rigctld -m 114 -r /dev/ttyUSB1
.PP
Start \fBrigctld\fP for a Yaesu FT-920 using a USB to serial adapter while
setting baud rate and stop bits and backgrounding:
.PP
$ rigctld -m 114 -r /dev/ttyUSB1 -s 4800 -C stop_bits=2 &
.PP
Connect to the already running \fBrigctld\fP, and set current frequency to 14.266 MHz:
.PP
$ echo "\\set_freq 14266000" | nc localhost 4532
.SH DIAGNOSTICS
The \fB-v\fP, \fB--version\fP option allows different levels of diagnostics
to be output to \fBstderr\fP and correspond to -v for BUG, -vv for ERR, 
-vvv for WARN, -vvvv for VERBOSE, or -vvvvv for TRACE.  
.PP
A given verbose level is useful for providing needed debugging information to
the email address below.  For example, TRACE output shows all of the values
sent to and received from the radio which is very useful for radio backend
library development and may be requested by the developers.
.SH SECURITY
No authentication whatsoever; don't leave this TCP port open wide to the Internet.
Please ask if stronger security is needed.
.SH BUGS
The daemon is not detaching and backgrounding itself.
.SH REPORTING BUGS
Report bugs to <hamlib-developer@lists.sourceforge.net>.
.br
We are already aware of the bugs in the previous section :-)
.SH AUTHORS
Written by Stephane Fillod and the Hamlib Group
.br
<http://www.hamlib.org>.
.SH COPYRIGHT
Copyright \(co 2000-2008 Stephane Fillod and the Hamlib Group.
.PP
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.
.SH SEE ALSO
.BR rigctl (1),
.BR hamlib (3)
