
This file is a release HOWTO, more or less a reminder before releasing
a new version of Hamlib.

TODO:   With the switch to SVN SCM discuss the use of tags and branches
        for releases.

Before deciding release:
-----------------------
* Anticipate what problems would users experience with the new release,
  so you can fix the problems before making the release.
  Basically, this is making sure the package will
  compile on a whole breed of systems (arch,OS,library,gcc,etc. combo),
  that there's no regression, and the API evolution is managed well.

* Announce SVN/version freeze on hamlib-developer mailing list,
  so developers have time to check in their contributions.

* Update the configuration:
    clean the tree
    sh ./autogen.sh

Releasing Hamlib:
----------------
* Update NEWS, TODO, AUTHORS

* Update the version in the macro AC_INIT of configure.ac (remove 'svn')

* Regenerate ChangeLog with:
    TZ=UTC svn2cl

* svn commit -m "release X.Y.Z" ChangeLog configure.ac NEWS
  Note the revision number (N).
* Tag the SVN rep with version 'HAMLIB-x-y-z'
    svn copy -r N https://hamlib.svn.sourceforge.net/svnroot/hamlib/trunk \
        https://hamlib.svn.sourceforge.net/svnroot/hamlib/tags/HAMLIB-x-y-z \
        -m "release x.y.z"

* Build source tarball:
    svn co -r N https://hamlib.svn.sourceforge.net/svnroot/hamlib/trunk hamlib
    sh autogen.sh --enable-maintainer-mode

    # (Would the above command be better invoked as:
    #   sh autogen.sh --disable-maintainer-mode --prefix=/usr/local CFLAGS="-g -O0"
    # ?? comments please.)

     make dist

* Build Windows DLL from previous tarball, and .LIB, then create .zip file
  Rem: under Linux, you need the package mingw32(+zip) to cross-compile it,
       and an internal copy of libltdl (configured and built),
       and free MVC++Toolkit to create .lib file:
         make distwin32

         Upload & edit Properties: select Windows

* Build Windows DLL with stdcall convention:
  Ditto but with HAMLIB_API set to __stdcall in include/hamlib/rig_dll.h before re-compiling.
  Subsitute cdecl by stdcall in README.txt.

* Release the file(s)
  - https://sourceforge.net/projects/hamlib/files/
  - Select Hamlib
  - Click Add Folder, name it X.Y.Z
  - Select X.Y.Z
  - Click Add File button
  - Click Choose File button
  - Click Upload
  - Click on (i) icon, select appropriate OS for "Default Download"

* Update http://www.hamlib.org Wiki
  - Download section
      https://sourceforge.net/apps/mediawiki/hamlib/index.php?title=Download

  - Documentation (requires doxygen)
      make -C doc doc
      ssh shell.sourceforge.net mkdir /home/project-web/h/ha/hamlib/htdocs/manuals/x-y-z
      scp -r doc/html shell.sourceforge.net:/home/project-web/h/ha/hamlib/htdocs/manuals/x-y-z/.
      Edit Wiki Documentation section

  - Supported Radios/Rotators
      make -C tests rigmatrix.html
      ssh -t USER,hamlib@shell.sourceforge.net create
      scp -r tests/sup-info/* USER,hamlib@shell.sourceforge.net:/home/project-web/hamlib/htdocs/sup-info/.

* Notify various sites:
  - Sourceforge/News: https://sourceforge.net/news/submit.php?group_id=8305
  - Freshmeat: http://freshmeat.net/projects/hamlib
  - http://radio.linux.org.au/pkgdetail.phtml?pkgid=243 Linux Hamradio App: rigctl category

* Send announce to mailing lists: [ANN] hamlib-announce, linux-ham

To advertise:
- list the rigs supported so far,
- what was major work achieved,
- where we're heading,
- what kind of support we need

Get ready for the next round:
* Bump version number and append 'svn' to it in macro AC_INIT of configure.ac

* Update src/Makefile.am revision of -version-info
