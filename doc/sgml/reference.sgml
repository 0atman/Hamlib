<chapter id="reference">
  <title>hamlib API Reference</title>
  <para>This chapter documents the Hamlib API for &curver;. Each function of
  the API occuring in <filename>rig.c</filename> at the time of release is
  documented here. Every effort was made to ensure all arguments and return
  values are correct, but, as always, the source is definitive. Errors are
  bound to have occurred and others will be blamed!</para>
  
  <refentry id="API-rigerror">
    <refmeta>
      <refentrytitle><phrase>rigerror</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rigerror</refname>
      <refpurpose>
      return string describing error code
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcprototype>
	<funcdef>const char * <function>rigerror </function></funcdef>
	<paramdef>int <parameter>errnum</parameter></paramdef>
	</funcprototype>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>errnum</parameter></term>
	  <listitem>
	    <para>
	    The error code
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rigerror</function> function returns a string describing the
      error code passed in the argument <parameter>errnum</parameter>.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The  <function>rigerror</function> function returns the appropriate
      description string, or an unknown error message if the error 
      code is unknown.
      </para>
    </refsect1>
    <refsect1>
      <title>TODO</title>
      <para>
      check table bounds, support gettext
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-foreach-opened-rig">
    <refmeta>
      <refentrytitle><phrase>foreach_opened_rig</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>foreach_opened_rig</refname>
      <refpurpose>
      execs cfunc() on each opened rig
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>foreach_opened_rig </function></funcdef>
	<paramdef>int (*<parameter>cfunc</parameter>)
	<funcparams>RIG *, void *</funcparams></paramdef>
	<paramdef>void * <parameter>data</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>cfunc</parameter></term>
	  <listitem>
	    <para>
	    The function to be executed on each rig
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>data</parameter></term>
	  <listitem>
	    <para>
	    Data pointer to be passed to <function>cfunc</function> 
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>foreach_opened_rig</function> function calls <function>cfunc</function> function
      for each opened rig. The contents of the opened rig table
      is processed in random order according to a function
      pointed to by <parameter>cfunc</parameter>, which is called with two arguments,
      the first pointing to the &amp;RIG handle, the second
      to a data pointer <parameter>data</parameter>.
      If <parameter>data</parameter> is not needed, then it can be set to <constant>NULL</constant>.
      The processing of the opened rig table is stopped
      when <function>cfunc</function> returns 0.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>foreach_opened_rig</function> function always returns
      <constant>RIG_OK</constant>.
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-init">
    <refmeta>
      <refentrytitle>
	<phrase>rig_init</phrase>
	<indexterm><primary>rig_init</primary></indexterm>	
      </refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_init</refname>
      <refpurpose>
      allocate a new &amp;RIG handle
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>RIG * <function>rig_init </function></funcdef>
	<paramdef>rig_model_t <parameter>rig_model</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig_model</parameter></term>
	  <listitem>
	    <para>
	    The rig model for this new handle
	    </para>
	  </listitem>	
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_init</function> function allocates a new &amp;RIG handle and
      initialize the associated data for <parameter>rig_model</parameter>.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_init</function> function returns a pointer
      to the &amp;RIG handle or <constant>NULL</constant> if memory allocation failed
      or <parameter>rig_model</parameter> is unknown.
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>      
      <para>
      <!-- brute force method to allow jumping from fucntion to function.  Bleah! Need to figure out indexing. -->
      <ulink url="api-rig-cleanup.html"><function>rig_cleanup</function></ulink>,
      <ulink url="api-rig-open.html"><function>rig_open</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-open">
    <refmeta>
      <refentrytitle><phrase>rig_open</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_open</refname>
      <refpurpose>
      open the communication to the rig
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_open </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The &amp;RIG handle of the radio to be opened
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_open</function> function opens communication to a radio
      which &amp;RIG handle has been passed by argument.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_open</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>ERRORS</title>
      <para>
      <constant>RIG_EINVAL</constant>	<parameter>rig</parameter> is <constant>NULL</constant> or unconsistent.
      <constant>RIG_ENIMPL</constant>	port type communication is not implemented yet.
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-close.html"><function>rig_close</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-close">
    <refmeta>
      <refentrytitle><phrase>rig_close</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_close</refname>
      <refpurpose>
      close the communication to the rig
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_close </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The &amp;RIG handle of the radio to be closed
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_close</function> function closes communication to a radio
      which &amp;RIG handle has been passed by argument.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_close</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>ERRORS</title>
      <para>
      <constant>RIG_EINVAL</constant>	<parameter>rig</parameter> is <constant>NULL</constant> or inconsistent.
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-open.html"><function>rig_open</function></ulink>,
      <ulink url="api-rig-cleanup.html"><function>rig_cleanup</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-cleanup">
    <refmeta>
      <refentrytitle><phrase>rig_cleanup</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_cleanup</refname>
      <refpurpose>
      release a closed rig struct
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_cleanup </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_cleanup</function> function releases a rig struct which port
      has already been closed.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_get_freq</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>ERRORS</title>
      <para>
      <constant>RIG_EINVAL</constant>	<parameter>rig</parameter> is <constant>NULL</constant> or inconsistent.
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-close.html"><function>rig_close</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-set-freq">
    <refmeta>
      <refentrytitle><phrase>rig_set_freq</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_set_freq</refname>
      <refpurpose>
      set the frequency of the current VFO
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_set_freq </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>freq_t <parameter>freq</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>freq</parameter></term>
	  <listitem>
	    <para>
	    The frequency to set to
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_set_freq</function> function sets the frequency of the current VFO.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_set_freq</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-get-freq.html"><function>rig_get_freq</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-get-freq">
    <refmeta>
      <refentrytitle><phrase>rig_get_freq</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_get_freq</refname>
      <refpurpose>
      get the frequency of the current VFO
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_get_freq </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>freq_t * <parameter>freq</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>freq</parameter></term>
	  <listitem>
	    <para>
	    The location where to store the current frequency
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_get_freq</function> function retrieves the frequency of the current VFO.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_get_freq</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-set-freq.html"><function>rig_set_freq</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-set-mode">
    <refmeta>
      <refentrytitle><phrase>rig_set_mode</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_set_mode</refname>
      <refpurpose>
      set the mode of the current VFO
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_set_mode </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>rmode_t <parameter>mode</parameter></paramdef>
	<paramdef>pbwidth_t <parameter>width</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>mode</parameter></term>
	  <listitem>
	    <para>
	    The mode to set to
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>width</parameter></term>
	  <listitem>
	    <para>
	    The passband width to set to
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_set_mode</function> function sets the mode of the current VFO.
      As a begining, the backend is free to ignore the <parameter>width</parameter> argument,
      however, it would be nice to at least honor the WFM case.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_set_mode</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-get-mode.html"><function>rig_get_mode</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-get-mode">
    <refmeta>
      <refentrytitle><phrase>rig_get_mode</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_get_mode</refname>
      <refpurpose>
      get the mode of the current VFO
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_get_mode </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>rmode_t * <parameter>mode</parameter></paramdef>
	<paramdef>pbwidth_t * <parameter>width</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>mode</parameter></term>
	  <listitem>
	    <para>
	    The location where to store the current mode
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>width</parameter></term>
	  <listitem>
	    <para>
	    The location where to store the current passband width
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_set_mode</function> function retrieves the mode of the current VFO.
      If the backend is unable to determine the width, it must
      return <constant>RIG_PASSBAND_NORMAL</constant> as a default.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_get_mode</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-set-mode.html"><function>rig_set_mode</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-set-vfo">
    <refmeta>
      <refentrytitle><phrase>rig_set_vfo</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_set_vfo</refname>
      <refpurpose>
      set the current VFO
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_set_vfo </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The VFO to set to
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_set_vfo</function> function sets the current VFO.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_set_vfo</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-get-vfo.html"><function>rig_get_vfo</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-get-vfo">
    <refmeta>
      <refentrytitle><phrase>rig_get_vfo</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_get_vfo</refname>
      <refpurpose>
      get the current VFO
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_get_vfo </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t * <parameter>vfo</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The location where to store the current VFO
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_get_vfo</function> function retrieves the current VFO.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_get_vfo</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-set-vfo.html"><function>rig_set_vfo</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-set-ptt">
    <refmeta>
      <refentrytitle><phrase>rig_set_ptt</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_set_ptt</refname>
      <refpurpose>
      set PTT on/off
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_set_ptt </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>ptt_t <parameter>ptt</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>ptt</parameter></term>
	  <listitem>
	    <para>
	    The PTT status to set to
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_set_ptt</function> function sets <quote>Push-To-Talk</quote> on/off.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_set_ptt</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-get-ptt.html"><function>rig_get_ptt</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-get-ptt">
    <refmeta>
      <refentrytitle><phrase>rig_get_ptt</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_get_ptt</refname>
      <refpurpose>
      get the status of the PTT
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_get_ptt </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>ptt_t * <parameter>ptt</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>ptt</parameter></term>
	  <listitem>
	    <para>
	    The location where to store the status of the PTT
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_get_ptt</function> function retrieves the status of PTT (are we
      on the air?).
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_get_ptt</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-set-ptt.html"><function>rig_set_ptt</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-set-rptr-shift">
    <refmeta>
      <refentrytitle><phrase>rig_set_rptr_shift</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_set_rptr_shift</refname>
      <refpurpose>
      set the repeater shift
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_set_rptr_shift </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>rptr_shift_t <parameter>rptr_shift</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>rptr_shift</parameter></term>
	  <listitem>
	    <para>
	    The repeater shift to set to
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_set_rptr_shift</function> function sets the current repeater shift.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_rptr_shift</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-get-rptr-shift.html"><function>rig_get_rptr_shift</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-get-rptr-shift">
    <refmeta>
      <refentrytitle><phrase>rig_get_rptr_shift</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_get_rptr_shift</refname>
      <refpurpose>
      get the current repeater shift
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_get_rptr_shift </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>rptr_shift_t * <parameter>rptr_shift</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>rptr_shift</parameter></term>
	  <listitem>
	    <para>
	    The location where to store the current repeater shift
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_get_rptr_shift</function> function retrieves the current repeater shift.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_get_rptr_shift</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-set-rptr-shift.html"><function>rig_set_rptr_shift</function></ulink>
      </para>
    </refsect1>
  </refentry>

  <refentry id="API-rig-set-rptr-offs">
    <refmeta>
      <refentrytitle><phrase>rig_set_rptr_offs</phrase></refentrytitle>
    </refmeta>
    <refnamediv>
      <refname>rig_set_rptr_offs</refname>
      <refpurpose>
      set the repeater offset
      </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
	<funcdef>int <function>rig_set_rptr_offs </function></funcdef>
	<paramdef>RIG * <parameter>rig</parameter></paramdef>
	<paramdef>vfo_t <parameter>vfo</parameter></paramdef>
	<paramdef>shortfreq_t <parameter>rptr_offs</parameter></paramdef>
      </funcsynopsis>
    </refsynopsisdiv>
    <refsect1>
      <title>Arguments</title>
      <variablelist>
	<varlistentry>
	  <term><parameter>rig</parameter></term>
	  <listitem>
	    <para>
	    The rig handle
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>vfo</parameter></term>
	  <listitem>
	    <para>
	    The target VFO
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>rptr_offs</parameter></term>
	  <listitem>
	    <para>
	    The VFO to set to
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
      The <function>rig_set_rptr_offs</function> function sets the current repeater offset.
      </para>
    </refsect1>
    <refsect1>
      <title>RETURN VALUE</title>
      <para>
      The <function>rig_set_rptr_offs</function> function returns <constant>RIG_OK</constant>
      if the operation has been sucessful, or a negative value
      if an error occured (in which case, cause is set appropriately).
      </para>
    </refsect1>
    <refsect1>
      <title>SEE ALSO</title>
      <para>
      <ulink url="api-rig-get-rptr-offs.html"><function>rig_get_rptr_offs</function></ulink>
      </para>
    </refsect1>
  </refentry>

<refentry id="API-rig-get-rptr-offs">
<refmeta>
<refentrytitle><phrase>rig_get_rptr_offs</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_rptr_offs</refname>
 <refpurpose>
   get the current repeater offset
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_rptr_offs </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>shortfreq_t * <parameter>rptr_offs</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>rptr_offs</parameter></term>
   <listitem>
    <para>
     	The location where to store the current repeater offset
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_rptr_offs</function> function retrieves the current repeater offset.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_rptr_offs</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-rptr-offs.html"><function>rig_set_rptr_offs</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-split-freq">
<refmeta>
<refentrytitle><phrase>rig_set_split_freq</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_split_freq</refname>
 <refpurpose>
   set the split frequencies
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_split_freq </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>freq_t <parameter>rx_freq</parameter></paramdef>
   <paramdef>freq_t <parameter>tx_freq</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>rx_freq</parameter></term>
   <listitem>
    <para>
     	The receive split frequency to set to
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>tx_freq</parameter></term>
   <listitem>
    <para>
     	The transmit split frequency to set to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_split_freq</function> function sets the split frequencies.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_split_freq</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-split-freq.html"><function>rig_get_split_freq</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-split-freq">
<refmeta>
<refentrytitle><phrase>rig_get_split_freq</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_split_freq</refname>
 <refpurpose>
   get the current split frequencies
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_split_freq </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>freq_t * <parameter>rx_freq</parameter></paramdef>
   <paramdef>freq_t * <parameter>tx_freq</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>rx_freq</parameter></term>
   <listitem>
    <para>
     	The location where to store the current receive split frequency
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>tx_freq</parameter></term>
   <listitem>
    <para>
     	The location where to store the current receive split frequency
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_split_freq</function> function retrieves the current split
   frequencies.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_split_freq</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-split-freq.html"><function>rig_set_split_freq</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-split">
<refmeta>
<refentrytitle><phrase>rig_set_split</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_split</refname>
 <refpurpose>
   set the split mode
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_split </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>split_t <parameter>split</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>split</parameter></term>
   <listitem>
    <para>
     	The split mode to set to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_split</function> function sets the current split mode.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_split</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-split.html"><function>rig_get_split</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-split">
<refmeta>
<refentrytitle><phrase>rig_get_split</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_split</refname>
 <refpurpose>
   get the current split mode
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_split </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>split_t * <parameter>split</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>split</parameter></term>
   <listitem>
    <para>
     	The location where to store the current split mode
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_split</function> function retrieves the current split mode.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_split</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-split.html"><function>rig_set_split</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-rit">
<refmeta>
<refentrytitle><phrase>rig_set_rit</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_rit</refname>
 <refpurpose>
   set the RIT
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_rit </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>shortfreq_t <parameter>rit</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>rit</parameter></term>
   <listitem>
    <para>
     	The RIT offset to adjust to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_rit</function> function sets the current RIT offset.
   A value of 0 for <parameter>rit</parameter> disables RIT.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_rit</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-rit.html"><function>rig_get_rit</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-rit">
<refmeta>
<refentrytitle><phrase>rig_get_rit</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_rit</refname>
 <refpurpose>
   get the current RIT offset
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_rit </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>shortfreq_t * <parameter>rit</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>rit</parameter></term>
   <listitem>
    <para>
     	The location where to store the current RIT offset
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_rit</function> function retrieves the current RIT offset.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_rit</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-rit.html"><function>rig_set_rit</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-ts">
<refmeta>
<refentrytitle><phrase>rig_set_ts</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_ts</refname>
 <refpurpose>
   set the Tuning Step
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_ts </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>shortfreq_t <parameter>ts</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>ts</parameter></term>
   <listitem>
    <para>
     	The tuning step to set to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_rs</function> function sets the Tuning Step.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_ts</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-ts.html"><function>rig_get_ts</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-ts">
<refmeta>
<refentrytitle><phrase>rig_get_ts</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_ts</refname>
 <refpurpose>
   get the current Tuning Step
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_ts </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>shortfreq_t * <parameter>ts</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>ts</parameter></term>
   <listitem>
    <para>
     	The location where to store the current tuning step
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_ts</function> function retrieves the current tuning step.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_ts</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-ts.html"><function>rig_set_ts</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-power2mW">
<refmeta>
<refentrytitle><phrase>rig_power2mW</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_power2mW</refname>
 <refpurpose>
   conversion utility from relative range to absolute in mW
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_power2mW </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>unsigned int * <parameter>mwpower</parameter></paramdef>
   <paramdef>float <parameter>power</parameter></paramdef>
   <paramdef>freq_t <parameter>freq</parameter></paramdef>
   <paramdef>rmode_t <parameter>mode</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>mwpower</parameter></term>
   <listitem>
    <para>
     	The location where to store the converted power in mW
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>power</parameter></term>
   <listitem>
    <para>
     	The relative power
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>freq</parameter></term>
   <listitem>
    <para>
     	The frequency where the conversion should take place
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>mode</parameter></term>
   <listitem>
    <para>
     	The mode where the conversion should take place
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_power2mW</function> function converts a power value expressed in
   a range on a [0.0 .. 1.0] relative scale to the real transmit power
   in milli Watts the radio would emit.
   The <parameter>freq</parameter> and <parameter>mode</parameter> where the conversion should take place must be
   also provided since the relative power is peculiar to a specific
   freq and mode range of the radio.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_power2mW</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-mw2power.html"><function>rig_mW2power</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-mW2power">
<refmeta>
<refentrytitle><phrase>rig_mW2power</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_mW2power</refname>
 <refpurpose>
   conversion utility from absolute in mW to relative range
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_mW2power </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>float * <parameter>power</parameter></paramdef>
   <paramdef>unsigned int <parameter>mwpower</parameter></paramdef>
   <paramdef>freq_t <parameter>freq</parameter></paramdef>
   <paramdef>rmode_t <parameter>mode</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>power</parameter></term>
   <listitem>
    <para>
     	The location where to store the converted relative power
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>mwpower</parameter></term>
   <listitem>
    <para>
     	The power in mW
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>freq</parameter></term>
   <listitem>
    <para>
     	The frequency where the conversion should take place
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>mode</parameter></term>
   <listitem>
    <para>
     	The mode where the conversion should take place
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_mW2power</function> function converts a power value expressed in
   the real transmit power in milli Watts the radio would emit to
   a range on a [0.0 .. 1.0] relative scale.
   The <parameter>freq</parameter> and <parameter>mode</parameter> where the conversion should take place must be
   also provided since the relative power is peculiar to a specific
   freq and mode range of the radio.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_mW2power</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-power2mw.html"><function>rig_power2mW</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-ctcss">
<refmeta>
<refentrytitle><phrase>rig_set_ctcss</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_ctcss</refname>
 <refpurpose>
   set CTCSS
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_ctcss </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>unsigned int <parameter>tone</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>tone</parameter></term>
   <listitem>
    <para>
     	The tone to set to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_ctcss</function> function sets the current Continuous Tone
   Controlled Squelch System (CTCSS) sub-audible tone.
   NB, <parameter>tone</parameter> is NOT in Hz, but in tenth of Hz! This way,
   if you want to set subaudible tone of 88.5 Hz for example,
   then pass 885 to this function. Also, to disable Tone squelch,
   set <parameter>tone</parameter> to 0.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_ctcss</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-ctcss.html"><function>rig_get_ctcss</function></ulink>,
    <ulink url="api-rig-set-dcs.html"><function>rig_set_dcs</function></ulink>,
    <ulink url="api-rig-get-dcs.html"><function>rig_get_dcs</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-ctcss">
<refmeta>
<refentrytitle><phrase>rig_get_ctcss</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_ctcss</refname>
 <refpurpose>
   get the current CTCSS
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_ctcss </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>unsigned int * <parameter>tone</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>tone</parameter></term>
   <listitem>
    <para>
     	The location where to store the current tone
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_ctcss</function> function retrieves the current Continuous Tone
   Controlled Squelch System (CTCSS) sub-audible tone.
   NB, <parameter>tone</parameter> is NOT in Hz, but in tenth of Hz! This way,
   if the function <function>rig_get_ctcss</function> returns a subaudible tone of 885
   for example, then the real tone is 88.5 Hz. 
   Also, a value of 0 for <parameter>tone</parameter> means the Tone squelch is disabled.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_ctcss</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-ctcss.html"><function>rig_set_ctcss</function></ulink>,
    <ulink url="api-rig-set-dcs.html"><function>rig_set_dcs</function></ulink>,
    <ulink url="api-rig-get-dcs.html"><function>rig_get_dcs</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-dcs">
<refmeta>
<refentrytitle><phrase>rig_set_dcs</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_dcs</refname>
 <refpurpose>
   set the current DCS
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_dcs </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>unsigned int <parameter>code</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>code</parameter></term>
   <listitem>
    <para>
     	The tone to set to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_dcs</function> function sets the current Digitally-Coded Squelch
   code.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_dcs</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-dcs.html"><function>rig_get_dcs</function></ulink>, 
    <ulink url="api-rig-set-ctcss.html"><function>rig_set_ctcss</function></ulink>, 
    <ulink url="api-rig-get-ctcss.html"><function>rig_get_ctcss</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-dcs">
<refmeta>
<refentrytitle><phrase>rig_get_dcs</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_dcs</refname>
 <refpurpose>
   get the current DCS
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_dcs </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>unsigned int * <parameter>code</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>code</parameter></term>
   <listitem>
    <para>
     	The location where to store the current tone
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_dcs</function> function retrieves the current 
   Digitally-Coded Squelch. 
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_dcs</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-dcs.html"><function>rig_get_dcs</function></ulink>, 
    <ulink url="api-rig-set-ctcss.html"><function>rig_set_ctcss</function></ulink>, 
    <ulink url="api-rig-get-ctcss.html"><function>rig_get_ctcss</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-ctcss-sql">
<refmeta>
<refentrytitle><phrase>rig_set_ctcss_sql</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_ctcss_sql</refname>
 <refpurpose>
   set CTCSS squelch
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_ctcss_sql </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>unsigned int <parameter>tone</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>tone</parameter></term>
   <listitem>
    <para>
     	The PL tone to set the squelch to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_ctcss_sql</function> function sets the current Continuous Tone
   Controlled Squelch System (CTCSS) sub-audible squelch tone.
   NB, <parameter>tone</parameter> is NOT in Hz, but in tenth of Hz! This way,
   if you want to set subaudible tone of 88.5 Hz for example,
   then pass 885 to this function. Also, to disable Tone squelch,
   set <parameter>tone</parameter> to 0.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_ctcss_sql</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-ctcss-sql.html"><function>rig_get_ctcss_sql</function></ulink>, 
    <ulink url="api-rig-set-ctcss.html"><function>rig_set_ctcss</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-ctcss-sql">
<refmeta>
<refentrytitle><phrase>rig_get_ctcss_sql</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_ctcss_sql</refname>
 <refpurpose>
   get the current CTCSS squelch
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_ctcss_sql </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>unsigned int * <parameter>tone</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>tone</parameter></term>
   <listitem>
    <para>
     	The location where to store the current tone
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_ctcss_sql</function> function retrieves the current Continuous Tone
   Controlled Squelch System (CTCSS) sub-audible squelch tone.
   NB, <parameter>tone</parameter> is NOT in Hz, but in tenth of Hz! This way,
   if the function <function>rig_get_ctcss</function> returns a subaudible tone of 885
   for example, then the real tone is 88.5 Hz. 
   Also, a value of 0 for <parameter>tone</parameter> means the Tone squelch is disabled.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_ctcss_sql</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-ctcss-sql.html"><function>rig_set_ctcss_sql</function></ulink>, 
    <ulink url="api-rig-get-ctcss.html"><function>rig_get_ctcss</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-dcs-sql">
<refmeta>
<refentrytitle><phrase>rig_set_dcs_sql</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_dcs_sql</refname>
 <refpurpose>
   set the current DCS
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_dcs_sql </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>unsigned int <parameter>code</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>code</parameter></term>
   <listitem>
    <para>
     	The tone to set to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_dcs_sql</function> function sets the current Digitally-Coded Squelch
   code.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_dcs_sql</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-dcs-sql.html"><function>rig_get_dcs_sql</function></ulink>, 
    <ulink url="api-rig-set-dcs.html"><function>rig_set_dcs</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-dcs-sql">
<refmeta>
<refentrytitle><phrase>rig_get_dcs_sql</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_dcs_sql</refname>
 <refpurpose>
   get the current DCS
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_dcs_sql </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>unsigned int * <parameter>code</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>code</parameter></term>
   <listitem>
    <para>
     	The location where to store the current tone
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_dcs_sql</function> function retrieves the current 
   Digitally-Coded Squelch. 
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_dcs_sql</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-dcs.html"><function>rig_get_dcs_sql</function></ulink>, 
    <ulink url="api-rig-get-dcs.html"><function>rig_get_dcs</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-poweron">
<refmeta>
<refentrytitle><phrase>rig_set_poweron</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_poweron</refname>
 <refpurpose>
   turn on the radio
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_poweron </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_poweron</function> function turns on the radio.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_poweron</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-poweroff.html"><function>rig_set_poweroff</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-poweroff">
<refmeta>
<refentrytitle><phrase>rig_set_poweroff</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_poweroff</refname>
 <refpurpose>
   turn off the radio
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_poweroff </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_poweroff</function> function turns off the radio.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_poweroff</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-poweron.html"><function>rig_set_poweron</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-level">
<refmeta>
<refentrytitle><phrase>rig_set_level</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_level</refname>
 <refpurpose>
   set a radio level setting
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_level </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>setting_t <parameter>level</parameter></paramdef>
   <paramdef>value_t <parameter>val</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>level</parameter></term>
   <listitem>
    <para>
     	The level setting
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>val</parameter></term>
   <listitem>
    <para>
     	The value to set the level setting to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_level</function> function sets the level of a setting.
   The level value <parameter>val</parameter> can be a float or an integer. See &amp;value_t
   for more information.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_level</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-has-set-level.html"><function>rig_has_set_level</function></ulink>, 
    <ulink url="api-rig-get-level.html"><function>rig_get_level</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-level">
<refmeta>
<refentrytitle><phrase>rig_get_level</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_level</refname>
 <refpurpose>
   get the level of a level
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_level </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>setting_t <parameter>level</parameter></paramdef>
   <paramdef>value_t * <parameter>val</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>level</parameter></term>
   <listitem>
    <para>
     	The level setting
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>val</parameter></term>
   <listitem>
    <para>
     	The location where to store the value of <parameter>level</parameter>
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_level</function> function retrieves the value of a <parameter>level</parameter>.
   The level value <parameter>val</parameter> can be a float or an integer. See &amp;value_t
   for more information.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_level</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-has-level.html"><function>rig_has_level</function></ulink>, 
    <ulink url="api-rig-set-level.html"><function>rig_set_level</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-has-level">
<refmeta>
<refentrytitle><phrase>rig_has_level</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_has_level</refname>
 <refpurpose>
   check retrieval ability of level settings
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>setting_t <function>rig_has_level </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>setting_t <parameter>level</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>level</parameter></term>
   <listitem>
    <para>
     	The level settings
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_has_level</function> <quote>macro</quote> checks if a rig can *get* a level setting.
   Since the <parameter>level</parameter> is a OR'ed bitwise argument, more than
   one level can be checked at the same time.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_has_level</function> <quote>macro</quote> returns a bit wise
   mask of supported level settings that can be retrieve,
   0 if none supported.
 </para>
</refsect1>
<refsect1>
 <title>EXAMPLE</title>
 <para>
<example><title></title><para>
    if (rig_has_level(my_rig, RIG_LVL_STRENGTH)) <function>disp_Smeter</function>;
</para></example>
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-has-set-level.html"><function>rig_has_set_level</function></ulink>, 
    <ulink url="api-rig-get-level.html"><function>rig_get_level</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-has-set-level">
<refmeta>
<refentrytitle><phrase>rig_has_set_level</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_has_set_level</refname>
 <refpurpose>
   check settable ability of level settings
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>setting_t <function>rig_has_set_level </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>setting_t <parameter>level</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>level</parameter></term>
   <listitem>
    <para>
     	The level settings
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_has_set_level</function> <quote>macro</quote> checks if a rig can *set* a level
   setting. Since the <parameter>level</parameter> is a OR'ed bitwise argument, more than
   one level can be check at the same time.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_has_set_level</function> <quote>macro</quote> returns a bit wise
   mask of supported level settings that can be set,
   0 if none supported.
 </para>
</refsect1>
<refsect1>
 <title>EXAMPLE</title>
 <para>
<example><title></title><para>
    if (rig_has_set_level(my_rig, RIG_LVL_RFPOWER)) <function>crank_tx</function>;
</para></example>
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-has-level.html"><function>rig_has_level</function></ulink>, 
    <ulink url="api-rig-set-level.html"><function>rig_set_level</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-has-func">
<refmeta>
<refentrytitle><phrase>rig_has_func</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_has_func</refname>
 <refpurpose>
   check ability of radio functions
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>setting_t <function>rig_has_func </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>setting_t <parameter>func</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>func</parameter></term>
   <listitem>
    <para>
     	The functions
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_has_func</function> <quote>macro</quote> checks if a rig supports a set of functions.
   Since the <parameter>func</parameter> is a OR'ed bitwise argument, more than
   one function can be checked at the same time.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_has_func</function> <quote>macro</quote> returns a bit wise
   mask of supported functions, 0 if none supported.
 </para>
</refsect1>
<refsect1>
 <title>EXAMPLE</title>
 <para>
<example><title></title><para>
    if (rig_has_func(my_rig, RIG_FUNC_FAGC)) <function>disp_fagc_button</function>;
</para></example>
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-func.html"><function>rig_set_func</function></ulink>, 
    <ulink url="api-rig-get-func.html"><function>rig_get_func</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-func">
<refmeta>
<refentrytitle><phrase>rig_set_func</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_func</refname>
 <refpurpose>
   activate/desactivate functions of radio
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_func </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>setting_t <parameter>func</parameter></paramdef>
   <paramdef>int <parameter>status</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>func</parameter></term>
   <listitem>
    <para>
     	The functions to activate
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>status</parameter></term>
   <listitem>
    <para>
     	The status (on or off) to set to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_func</function> function activate/desactivate functions of the radio.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_func</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-func.html"><function>rig_get_func</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-func">
<refmeta>
<refentrytitle><phrase>rig_get_func</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_func</refname>
 <refpurpose>
   get the status of functions of the radio
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_func </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>setting_t * <parameter>func</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>func</parameter></term>
   <listitem>
    <para>
     	The location where to store the function status
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_func</function> function retrieves the status of functions
   of the radio. Only the function bits set to 1 will be queried.
   On return, <parameter>func</parameter> will hold the status of funtions (bit set to 1 =
   activated, bit set to 0 = desactivated).
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_func</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-func.html"><function>rig_set_func</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-mem">
<refmeta>
<refentrytitle><phrase>rig_set_mem</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_mem</refname>
 <refpurpose>
   set the current memory channel number
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_mem </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>int <parameter>ch</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>ch</parameter></term>
   <listitem>
    <para>
     	The memory channel number
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_mem</function> function sets the current memory channel number.
   It is not mandatory for the radio to be in memory mode. Actually
   it depends on rigs. YMMV.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_mem</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-mem.html"><function>rig_get_mem</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-mem">
<refmeta>
<refentrytitle><phrase>rig_get_mem</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_mem</refname>
 <refpurpose>
   get the current memory channel number
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_mem </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>int * <parameter>ch</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>ch</parameter></term>
   <listitem>
    <para>
     	The location where to store the current memory channel number
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_mem</function> function retrieves the current memory channel number.
   It is not mandatory for the radio to be in memory mode. Actually
   it depends on rigs. YMMV.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_mem</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-mem.html"><function>rig_set_mem</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-mv-ctl">
<refmeta>
<refentrytitle><phrase>rig_mv_ctl</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_mv_ctl</refname>
 <refpurpose>
   perform Memory/VFO operations
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_mv_ctl </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>mv_op_t <parameter>op</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>op</parameter></term>
   <listitem>
    <para>
     	The Memory/VFO operation to perform
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_mv_ctl</function> function performs Memory/VFO operation.
   See &amp;mv_op_t for more information.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_mv_ctl</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-bank">
<refmeta>
<refentrytitle><phrase>rig_set_bank</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_bank</refname>
 <refpurpose>
   set the current memory bank
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_bank </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>int <parameter>bank</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>bank</parameter></term>
   <listitem>
    <para>
     	The memory bank
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_bank</function> function sets the current memory bank.
   It is not mandatory for the radio to be in memory mode. Actually
   it depends on rigs. YMMV.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_bank</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-mem.html"><function>rig_set_mem</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-channel">
<refmeta>
<refentrytitle><phrase>rig_set_channel</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_channel</refname>
 <refpurpose>
   set channel data
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_channel </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>const channel_t * <parameter>chan</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>chan</parameter></term>
   <listitem>
    <para>
     	The location of data to set for this channel
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_channel</function> function sets the data associated 
   with a channel. See &amp;channel_t for more information.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_channel</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-channel.html"><function>rig_get_channel</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-channel">
<refmeta>
<refentrytitle><phrase>rig_get_channel</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_channel</refname>
 <refpurpose>
   get channel data
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_channel </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>channel_t * <parameter>chan</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>chan</parameter></term>
   <listitem>
    <para>
     	The location where to store the channel data
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_channel</function> function retrieves the data associated 
   with the channel <parameter>chan</parameter>-&gt;channel_num. 
   See &amp;channel_t for more information.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_channel</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-channel.html"><function>rig_set_channel</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-range">
<refmeta>
<refentrytitle><phrase>rig_get_range</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_range</refname>
 <refpurpose>
   find the freq_range of freq/mode
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>const freq_range_t * <function>rig_get_range </function></funcdef>
   <paramdef>const freq_range_t * <parameter>range_list</parameter></paramdef>
   <paramdef>freq_t <parameter>freq</parameter></paramdef>
   <paramdef>rmode_t <parameter>mode</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>range_list</parameter></term>
   <listitem>
    <para>
     	The range list to search from
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>freq</parameter></term>
   <listitem>
    <para>
     	The frequency that will be part of this range
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>mode</parameter></term>
   <listitem>
    <para>
     	The mode that will be part of this range
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_range</function> function returns the location of the &amp;freq_range_t
   including <parameter>freq</parameter> and <parameter>mode</parameter>.
   Works for rx and tx range list as well.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_range</function> function returns the location
   of the &amp;freq_range_t if found, <constant>NULL</constant> if not found or if <parameter>range_list</parameter>
   is invalid.
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-set-trn">
<refmeta>
<refentrytitle><phrase>rig_set_trn</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_set_trn</refname>
 <refpurpose>
   control the transceive mode 
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_set_trn </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>int <parameter>trn</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>trn</parameter></term>
   <listitem>
    <para>
     	The transceive status to set to
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_set_trn</function> function enable/disable the transceive
   handling of a rig and kick off async mode.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_set_trn</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-get-trn.html"><function>rig_get_trn</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-trn">
<refmeta>
<refentrytitle><phrase>rig_get_trn</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_trn</refname>
 <refpurpose>
   get the current transceive mode
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>int <function>rig_get_trn </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
   <paramdef>vfo_t <parameter>vfo</parameter></paramdef>
   <paramdef>int * <parameter>trn</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>vfo</parameter></term>
   <listitem>
    <para>
     	The target VFO
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><parameter>trn</parameter></term>
   <listitem>
    <para>
     	The location where to store the current transceive mode
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_trn</function> function retrieves the current status
   of the transceive mode, ie. if radio sends new status automatically 
   when some changes happened on the radio.
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_trn</function> function returns <constant>RIG_OK</constant>
   if the operation has been sucessful, or a negative value
   if an error occured (in which case, cause is set appropriately).
 </para>
</refsect1>
<refsect1>
 <title>SEE ALSO</title>
 <para>
    <ulink url="api-rig-set-trn.html"><function>rig_set_trn</function></ulink>
 </para>
</refsect1>
</refentry>

<refentry id="API-rig-get-info">
<refmeta>
<refentrytitle><phrase>rig_get_info</phrase></refentrytitle>
</refmeta>
<refnamediv>
 <refname>rig_get_info</refname>
 <refpurpose>
   get general information from the radio
 </refpurpose>
</refnamediv>
<refsynopsisdiv>
 <title>Synopsis</title>
  <funcsynopsis>
   <funcdef>unsigned char* <function>rig_get_info </function></funcdef>
   <paramdef>RIG * <parameter>rig</parameter></paramdef>
  </funcsynopsis>
</refsynopsisdiv>
<refsect1>
 <title>Arguments</title>
 <variablelist>
  <varlistentry>
   <term><parameter>rig</parameter></term>
   <listitem>
    <para>
     	The rig handle
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</refsect1>
<refsect1>
 <title>Description</title>
 <para>
   The <function>rig_get_info</function> function retrieves some general information
   from the radio. This can include firmware revision, exact
   model name, or just nothing. 
 </para>
</refsect1>
<refsect1>
 <title>RETURN VALUE</title>
 <para>
    The <function>rig_get_info</function> function returns a pointer
   to freshly allocated memory containing the ASCIIZ string 
   if the operation has been sucessful, or NULL 
   if an error occured.
 </para>
</refsect1>
</refentry>
</chapter>

<!-- 
Local Variables:
mode: sgml
sgml-parent-document: ("hamlib.sgml" "book" "chapter")
End:
-->
